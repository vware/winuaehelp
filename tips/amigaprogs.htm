<html>
<head>
<title>Amiga Programs</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="../Style.css" type="text/css" rel="stylesheet">
</head>
<body id="bodyID" class="dtBODY">
<div id="nstext">
  <p class="normal">Along with the WinUAE emulator program, some programs are supplied
    in the 'Amiga Programs' folder in the C:\Program Files\WinUAE folder. Here
    is an explanation of what these files are for and where to copy them to:</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">MouseHack</h2>
  <p class="normal">Copy this program file to your C directory on your Workbench
    disk or hard disk. This program will hack your mouse connected to your PC to
    work with WinUAE. In most cases it may not be needed. You can auto run it by
    adding a line to the s:user-startup file on your Workbench disk. Needed when
    using tablets. Tablets only work properly if you select &quot;mousehack mouse&quot; and
    run mousehack on the Amiga side.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">Picasso96fix</h2>
  <p class="normal">Copy this program file to your C directory on your Workbench disk
    or hard disk. This program will fix Picasso 96 RTG screens greater than 1024
    pixels when using your PC's graphics card with the uaegfx driver in WinUAE.
    Load it before LoadWB in the startup-sequence. The <strong>Picasso96fix.bb</strong> file
    is the source code to this program written in Blitz Basic.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">rtg.library</h2>
  <p class="normal">Re-targetable Graphics Library. Copy this library file to your
    libs:picasso96. This library will increase the speed of WinUAE a lot.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">timehack</h2>
  <p class="normal">This tool synchronizes the Amiga time with the current Windows
    time every second. You need this when you use the hibernation feature of your
    PC and resume to get exact time. If you need exact time (for compiler make)
    it is also recommended to use this because UAE cycletiming differs of about
    1-2 seconds per hour.</p>
  <p class="normal">Copy it to the Amiga system directory c. Start it in your Userstartup
    with the command run &gt;nil: timehack.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">transdisk</h2>
  <p class="normal">Copy this program file to your C directory on your Workbench disk
    or hard disk. This can Transfer Disk images to or from floppy disk to an image
    or vice versa in ADF (Amiga Disk Format). Type <em>transdisk ?</em> for more
    options. See <a href="../started/transdisk.htm">trandisk</a> page for more
    details on this program.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">transrom</h2>
  <p class="normal">Copy this program file to your C directory on your Workbench disk
    or hard disk. This can Transfer the Kickstart ROM image from a real Amiga to
    an image file to use with your Amiga Emulator. It will produce either a 256K
    or 512kB sized file. See <a
 href="../started/transrom.htm">transrom</a> page for more details on this program.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">UAE</h2>
  <p class="normal">Copy this file to the AHI driver drawer in Devs on your Workbench
    disk or hard disk. It is used to emulate the Amiga's sound system using AHI
    retargetable sound driver system.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">UAE.audio</h2>
  <p class="normal">This is the AHI Driver for UAE. It enables support for recording
    and playback with a sampling rate up to 96 kHz in 16 bit. Copy this file to
    the Devs:AHI driver drawer in Devs on your Workbench disk or hard disk. It
    is used to emulate the Amiga's sound system using AHI retargetable sound driver
    system. This driver works fully independent from Paula sound. For a speed boost
    on slower systems, you can set the Paula buffer to 5 or 6, and chose 11kHz
    Mono, which is enough to hear system sounds.<br>
    If you installed the driver correctly, it should offer you only 1 mode: UAE hifi stereo++.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">UAE_German</h2>
  <p class="normal">This is a German keymap file for access to @\~{[]} with ALT-GR
    like windows. Copy it to devs/keymaps and select in Input prefs.</p>
  <p class="normal">Note: This is an old one that works in input compatibility
    mode. For 100% compatibility Mode (Euro Char) use&nbsp; German_keymap_new.lha
    in this folder and choose anything other in input tab then Compatibility Mode
    and&nbsp; remap # Key to 0x2b.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">uae_rcli</h2>
  <p class="normal">Remote CLI. Usage: uae_rcli [?|-h] [-debug] [-nofifo] [&lt;delay&gt;]</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">uae-control</h2>
  <p class="normal">Copy this program file to your Utilities folder or some other
    folder on your Workbnch disk or hard disk. It will provide you a user interface
    within the emulator to control the floppy drives, reset, quit and other features
    without having to press F12 to bring up the WinUAE interface.</p>
  <p align="center"><img src="uaecontrol.gif" alt="UAE-Control"></p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">uaectrl</h2>
  <p class="normal">Copy this program file to your C directory on your Workbench
    disk or hard disk. This is the Shell equivalent of the uae-control program
    where you can change floppies, sound, joystick, reset or quit the emulator
    from a simple text menu.</p>
  <p align="center"><img src="uaectrl.gif" alt="UAE-Control Shell"></p>
  <h2 class="dtH2">WinUAEclip</h2>
  <p class="normal">This program allows you to have access to Windows Clipboard so
    you can copy/paste files from/to WinUAE.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">WinUAEnforcer</h2>
  <p class="normal">This program allows Enforcer support to detect bad memory access
    when developing programs or debugging. For 100% safety, use <a href="../emulation/jit.htm">JIT</a> in
    Indirect Mode. Make sure you use a tool that moves your VBR to Fast RAM. MCP
    or some other tools on Aminet do that. You can also use Segtracker from a real
    Amiga to find the program and offset of a hit.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">winxpprinthelper</h2>
  <p class="normal">Not sure what this does yet. Need printer switched on before
    running this.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">p96_uae_tweak</h2>
  <p class="normal">It must run after P96 monitordrivers in userstartup.<br>
    If you have copy this prog to <em>c:</em> then type <em>&gt;nil: c:p96_uae_tweak</em> in
    the CLI.<br>
    It is also recommended to set P96 memory from the 4 MB AIAB config to 16 or
    32 MB, because it works faster. If not enough gfx card space is free you will
    see flicker as before and slower moves. Save the config and restart WinUAE
    when you have increased the gfx memory size. Crashes may occur when you only
    reboot the emulated Amiga. <br>
    To test it you can boot AIAB open the screenmode prefs window. Now put the
    screenmode prefs window to back and move it around underneath other windows.<br>
    If the window moves fast and does not flicker all, you are done. With that
    patch it is also impossible that P96 graphics actions can block WinUAE, so
    you get no AHI 16bit sound stoddering when doing a lot of graphics actions.<br>
    The patch splits large P96 blits (&gt;60 pixels) in smaller blocks and checks
    in all blocks if a 16bit AHI buffer is free. This avoids speedlosses and sound
    stoddering with 4ms AHI latency. Swapbitmaprastport (used for solid windowmoving
    and some slow layer actions) is patched to use UAE blitter functions that exchange
    the data directly instead calling 3 times EOR. It is faster and avoids the
    heavy flickering when moving a smartlayer window underneath another window.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">ahitweak</h2>
  <p><strong>Usage: AHItweak posoffset,pollrate</strong></p>
  <p class="normal">This is a program you can start from the CLI or user-startup
    and allows you to tune the AHI driver for better latency, because on Windows
    XP the playpointer position has a delay depending on the system and soundcard
    used. Most users do not need this tool, but if you have crackle problems with
    16bit AHI, play a song and try values of 50, 200, 500, 2000, -50, -200, -500,
    and -2000. With some trying, you may be able to get good results.You may also
    try to set the pollrate which WinUAE checks for buffers freely between 10 and
    60. If you notice a speedloss you should set it to 60. If you use low latency
    music software that lets you chose AHI blocksizes less than&nbsp; 8 ms (AHI
    uses 20ms by default) you can set this to a lower value if you hear crackle.</p>
  <p class="normal">&nbsp;</p>
  <h2 class="dtH2">p96refresh</h2>
  <p class="normal">Start this program to get higher mousepointer redraw rates than
    50Hz with P96. Results are seen immediately after call.You can start this in
    your user-startup for automatic load during booting the system.<br>
    <strong>Note:</strong> If you use this, you must check if your CPU IDLE slider
    is set in correct position. In the worst case, the Amiga system clock will
    run slower. Set the IDLE slider so that in Windows Taskmanager the CPU load
    of a Workbench screen shows about 10-15%.<br>
    <strong>Example:</strong> p96refresh 75 sets the redraw rate to 75Hz. It is
    recommended to set the rate according to the actual monitor refresh rate, or
    the doubled number. Do not set it higher or you get a speedloss greater than
    2%.</p>
  <p class="normal">&nbsp;</p>
  <p class="normal">&nbsp;</p>
</div>
<div class="footer">
  <hr>
  Help content is under the terms of the <a href="../credits/fdl.htm">GNU Free Documentation License</a>.</div>
</body>
</html>
